---
import Layout from '../layouts/Layout.astro';
import UtilHeader from '../components/UtilHeader.astro';
import UtilTile from '../components/UtilTile.astro';
import SectionPagination from '../components/SectionPagination.astro';

import type {IUser, IOrderTile} from '../interfaces';

import data from '../pages/profile.json';

const {tel, firstName, middleName, lastName, email, amount, balance}: IUser = data.info;
const orders: IOrderTile[] = data.orders;
const lastPage: number = data.lastPage;
const currentPage: number = 1;

const title: string = 'Личный кабинет';
const link: string = '/profile';
---

<Layout title="Профиль" page="profile" isUser={true} userInfo={data.info}>
  <link rel="stylesheet" href="./pages/profile.css"/>
  <div class="page-wrapper">
    <UtilHeader type="profile" title={title}/>

    {1 === currentPage && (
      <UtilTile tag="section" classList={['section']} isHidden={false}>
        <div class="info">
          <span class="primary title">{tel}</span>
        </div>
        <button type="button" class="button" data-popup-open="profile-tel">
          <span>Изменить</span>
        </button>
      </UtilTile>

      <UtilTile tag="section" classList={['section']} isHidden={false}>
        <div class="info">
          <span class="primary title">{lastName} {firstName} {middleName}</span>
          <span class="primary text">{email}</span>
        </div>
        <button type="button" class="button" data-popup-open="profile-name">
          <span>Изменить</span>
        </button>
      </UtilTile>

      <UtilTile tag="section" classList={['section']} isHidden={false}>
        <div class="info">
          <span class="primary title">{amount.toLocaleString('ru-RU')} руб.</span>
          <span class="third text">Общая сумма заказов</span>
        </div>
        <div class="info">
          <span class="secondary title">{balance.toLocaleString('ru-RU')} руб.</span>
          <span class="secondary text">Бонусов на счету</span>
        </div>
      </UtilTile>
    )}

    <UtilTile tag="section" classList={['section-orders']} isHidden={false}>
      <div class="orders-title">История заказов</div>
      <div class="orders" data-page-items>
        {orders.map(({number, status}: IOrderTile) => (
          <div class="order">
            <div class="order-header">
              <span class="title">Заказ № {number}</span>
              <span class="status">{status}</span>
            </div>
            <details class="order-main">
              <summary class="order-summary">
                <svg class="svg" width="14" height="9" viewBox="0 0 14 9" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12.5703 1.35748L7.07031 7.35748L1.57031 1.35748" stroke="currentColor" stroke-width="2"
                        stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </summary>
              <div class="order-content">
                &hellip;
              </div>
            </details>
          </div>
        ))}
      </div>
    </UtilTile>

    {1 < lastPage &&
      <SectionPagination currentPage={currentPage} lastPage={lastPage} baseLink={link}/>}
  </div>
  <script src="./pages/profile.js" is:inline async></script>
</Layout>
